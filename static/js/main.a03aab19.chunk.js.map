{"version":3,"sources":["components/Navbar/index.js","components/Footer/index.js","components/Grid/index.js","pages/Home.js","components/ProjectCard/index.js","pages/Portfolio.js","pages/Resume.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","role","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Footer","rel","target","Container","fluid","children","Row","Col","size","split","map","s","join","Home","aboutMe","item","key","heading","paragraph","ProjectCard","props","src","imgURL","alt","name","subtitle","github","link","Portfolio","projects","project","description","Resume","width","height","title","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a03aab19.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-sm  sticky-top navbar-dark bg-dark\" role=\"navigation\">\n      <a className=\"navbar-brand\" href=\"/\">Richard Wang</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <div className=\"navbar-nav ml-auto\" role=\"navigation\">\n          <a className=\"nav-item nav-link\" href=\"/\">Home</a>\n          <a className=\"nav-item nav-link\" href=\"/portfolio\">Portfolio</a>\n          <a className=\"nav-item nav-link\" href=\"/resume\">Resume</a>\n\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar;\n","import React from 'react';\n\nconst Footer = () => {\n\n  return (\n    <nav className=\"footer navbar navbar-expand fixed-bottom navbar-dark bg-dark\" role=\"navigation\">\n      <div className=\"navbar-nav\" role=\"navigation\">\n        <a className=\"nav-item nav-link text-center\" href={\"https://github.com/phaggio/\"}\n          rel=\"noopener noreferrer\" target=\"_blank\">\n          <i className=\"fab fa-github-square fa-2x\"></i>\n        </a>\n        <a className=\"nav-item nav-link text-center\" href={\"https://www.linkedin.com/in/richard-c-wang/\"}\n          rel=\"noopener noreferrer\" target=\"_blank\">\n          <i className=\"fab fa-linkedin fa-2x\"></i>\n        </a>\n      </div>\n    </nav>\n  )\n}\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport function Container({ fluid, children }) {\n  return (\n    <div className={`container${fluid ? `-fluid` : ``}`}>{children}</div>\n  );\n}\nContainer.propTypes = {\n  children: PropTypes.node,\n  fluid: PropTypes.bool\n};\n\nexport function Row({ fluid, children }) {\n  return (\n    <div className={`row${fluid ? `-fluid` : ``}`}>{children}</div>\n  );\n}\nRow.propTypes = {\n  children: PropTypes.node,\n  fluid: PropTypes.bool\n};\n\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(` `)\n        .map(s => `col-${s}`)\n        .join(` `)\n      }\n    >\n      {children}\n    </div>\n  );\n}\nCol.propTypes = {\n  children: PropTypes.node,\n  size: PropTypes.string\n};\n","import React from 'react';\nimport aboutMe from '../json/about-me.json';\nimport { Col, Row, Container } from '../components/Grid';\n\nconst Home = () => {\n  return (\n      <Container>\n        <Col size=\"12\">\n          {\n            aboutMe.map(item =>\n              <Row key={item.heading}>\n                <div className=\"paragraph\">\n                  <h3>{item.heading}</h3>\n                  <p>{item.paragraph}</p>\n                </div>\n              </Row>\n            )\n          }\n        </Col>\n      </Container>\n  )\n}\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst ProjectCard = (props) => {\n  return (\n    <div className=\"card h-100\">\n      <img src={props.imgURL} className=\"card-img-top\" alt={props.name} />\n      <div className=\"card-body d-flex flex-column\">\n        <h4 className=\"card-title\">{props.name}</h4>\n        <p className=\"card-text\">{props.subtitle}</p>\n        <div className=\"text-center mt-auto\">\n          <a href={props.github} className=\"btn btn-primary mx-1 my-1\"\n            rel=\"noopener noreferrer\" target=\"_blank\">GitHub page</a>\n          <a href={props.link} className=\"btn btn-primary mx-1 my-1\"\n            rel=\"noopener noreferrer\" target=\"_blank\">Application</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nProjectCard.propTypes = {\n  name: PropTypes.string,\n  subtitle: PropTypes.string,\n  description: PropTypes.string,\n  link: PropTypes.string,\n  github: PropTypes.string,\n  imgURL: PropTypes.string\n}\n\nexport default ProjectCard;\n","import React from 'react';\nimport { Col, Container, Row } from '../components/Grid';\nimport ProjectCard from '../components/ProjectCard';\nimport projects from '../json/projects.json';\n\nconst Portfolio = () => {\n  return (\n    <div className=\"background\">\n      <Container>\n        <Row>\n          {projects.map(project =>\n            <Col size=\"sm-12 md-6 lg-4\" key={project.name}>\n              <ProjectCard\n                name={project.name}\n                subtitle={project.subtitle}\n                description={project.description}\n                imgURL={project.imgURL}\n                github={project.github}\n                link={project.link}\n              />\n            </Col>\n          )}\n\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Portfolio;","import React from 'react';\n\nconst Resume = () => {\n  return (\n\n    <iframe\n      className=\"\"\n      src={\"https://docs.google.com/gview?url=https://raw.githubusercontent.com/phaggio/resume/master/RichardWangResume.pdf&embedded=true\"}\n      width=\"100%\"\n      height=\"700px\"\n      title=\"Richard Wang\"\n    ></iframe>\n  )\n}\n\n\n\n\n\nexport default Resume;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Home from './pages/Home';\nimport Portfolio from './pages/Portfolio';\nimport Resume from './pages/Resume';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n          <Route exact path=\"/resume\" component={Resume} />\n        </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}